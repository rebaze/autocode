import com.rebaze.bespoke.*;
import org.junit.Test;

import java.io.File;
import java.io.IOException;

import static com.rebaze.bespoke.MutationBuilder.mutation;

/*
 * This Java source file was auto generated by running 'gradle init --type java-library'
 * by 'tonit' at '10/15/16 3:54 PM' with Gradle 3.1
 *
 * @author tonit, @date 10/15/16 3:54 PM
 */
public class BespokeTest {
  @Test
  public void testSmaIguanaStudioAsWhitebox() throws IOException {
    MutationContext ctx = new MutationContext();
    ctx.addRule(mutation().match(".*").copy());
    ctx.addRule(mutation().match(".*").rename("de.sma.iguana.studio", "org.rebaze.bndtools.ide"));
    ctx.addRule(
        mutation()
            .match(".*/pom.xml")
            .modify("de\\.sma\\.iguana\\.studio", "org.rebaze.bndtools.ide")
            .modify("SMA", "rebaze"));
    ctx.addRule(
        mutation().match(".*\\.java").modify("de\\.sma\\.iguana\\.studio", "org.rebaze.bndtools.ide"));
    ctx.addRule(
        mutation()
            .match(".*/MANIFEST.MF")
            .modify("de\\.sma\\.iguana\\.studio", "org.rebaze.bndtools.ide")
            .modify("SMA Iguana", "rebaze")
            .modify("SMA", "rebaze")
            .modify("Iguana", "rebaze"));
    ctx.addRule(
        mutation()
            .match(".*/*\\.xml")
            .modify("de\\.sma\\.iguana\\.studio", "org.rebaze.bndtools.ide")
            .modify("SMA", "rebaze")
            .modify("sma.de", "rebaze.com")
            .modify("Iguana", "rebaze")
            .modify("iguana", "rebaze"));
    ctx.addRule(mutation().match(".*/*\\.properties").modify("sma", "rebaze"));

    ctx.addRule(mutation().match(".*/*\\.inf").modify("sma", "rebaze"));

    ctx.addRule(
        mutation()
            .match(".*/*\\.product")
            .modify("de\\.sma\\.iguana\\.studio", "org.rebaze.bndtools.ide")
            .modify("SMA", "rebaze")
            .modify("iguana", "rebaze")
            .modify("www.sma.de", "www.rebaze.com")
            .modify("Iguana", "")
            .modify("sma", "rebaze"));

    ctx.addRule(mutation().match(".*/splash.bmp").replace("/rebaze.bmp"));

    ctx.addRule(mutation().match(".*sma\\.gif").replace("/rebaze.gif").rename("sma", "rebaze"));

    ctx.addRule(mutation().match(".*studio.ide.p2.inf").replace("/rebaze.inf"));

    ctx.addRule(mutation().match(".*Iguana8\\.bmp").ignore());
    ctx.addRule(mutation().match(".*Iguana8\\.png").ignore());
    ctx.addRule(mutation().match(".*iguana24\\.png").ignore());

    ctx.addRule(mutation().match(".*target\\/.*").ignore());
    ctx.addRule(mutation().match(".*bin\\/.*").ignore());
    ctx.addRule(mutation().match(".*\\.DS_Store").ignore());
    ctx.addRule(mutation().match(".*\\.git").ignore());

    // Apply the rules to our universe
    LocalUniverse universe = new LocalUniverse(new File("load/studio"));
    ctx.applyTo(universe);

    // Materialize to disk
    Materializer mystique = new LocalCopyingMaterializer(new File("target/output"),true);
    mystique.materialize(universe);
  }

  @Test
  public void testSingle() throws IOException {
    MutationContext ctx = new MutationContext();
    ctx.addRule(mutation().match(".*").copy());
    ctx.addRule(mutation().match(".*sma\\.gif").replace("/rebaze.gif").rename("sma", "rebaze"));
    ctx.addRule(mutation().match(".*target\\/.*").ignore());
    ctx.addRule(mutation().match(".*bin\\/.*").ignore());
    ctx.addRule(mutation().match(".*\\.DS_Store").ignore());
    ctx.addRule(mutation().match(".*\\.git").ignore());

    // Apply the rules to our universe
    LocalUniverse universe = new LocalUniverse(new File("load/studio/de.sma.iguana.studio.plugin"));
    ctx.applyTo(universe);

    // Materialize to disk
    Materializer mat = new LocalCopyingMaterializer(new File("target/output"));
    mat.materialize(universe);
  }
}
